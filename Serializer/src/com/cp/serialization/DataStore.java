package com.cp.serialization;

/**
 * Interface that allows for arbitrary data stores to be plugged
 * in for persistence for the metadata generated by the serializer.
 */
public interface DataStore {
	/**
	 * Saves the specified data by the key.
	 * 
	 * @param key used to identify the data
	 * @param data content to be saved
	 */
	public void storeData(String key, byte[] data);
	
	/**
	 * Loads the data specified by the key if it is available.  If
	 * it is not available, null should be returned.  This method
	 * will be called on every attempt to serialize and deserialize
	 * data.  As such, if the methods ends up hitting something remote,
	 * you may want to put a local cache in place.
	 * 
	 * @param key used to lookup the data
	 * @return the data saved by key or null if none is found
	 */
	public byte[] loadData(String key);
	
	/**
	 * Returns the next value of a counter that should be persisted
	 * with the same life as the stored meta data and incremented
	 * atomically
	 */
	public long nextCounterValue();
}
